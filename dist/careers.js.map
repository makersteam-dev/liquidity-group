{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/careers.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\r\n", "/*######################################################\r\n             comeet generate jobs - march 23 - MakersTeam\r\n             https://www.comeet.co/careers-api/2.0/company/77.00A/positions?token=77A2CDC166E3BD03BD0345634562CDC1DE8EF4&details=false\"\r\n\r\n             docs:\r\n             https://developers.comeet.com/reference/list-all-positions-new-to-be-changed-to-page\r\n  ########################################################*/\r\n/*tokkens for comeet integration - March 2023 */\r\nwindow.comeetInit = function () {\r\n  COMEET.init({\r\n    token: '77A2CDC166E3BD03BD0345634562CDC1DE8EF4',\r\n    'company-uid': '77.00A',\r\n    'company-name': 'LIQUiDITY Group',\r\n  });\r\n};\r\n\r\nconst api_path =\r\n  'https://www.comeet.co/careers-api/2.0/company/77.00A/positions?token=77A2CDC166E3BD03BD0345634562CDC1DE8EF4&details=false';\r\n\r\nasync function myFetch() {\r\n  try {\r\n    let response = await fetch(api_path);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    let jobs = await response.json();\r\n\r\n    $('[data-results]').text(jobs.length);\r\n\r\n    if (jobs.length == 0) {\r\n      //alert(\"no jobs\");\r\n      $('[data-jobs-wrap]').append(`<h2 class=\"department_title\">No jobs available.</h2>`);\r\n      return;\r\n    }\r\n    /* ######################################################\r\n          Part 1 - GENERATE LIST OF CATEGORIES FROM ALL POSITIONS \r\n           - MakersTeam\r\n          ######################################################### */\r\n    // Creates an array of values by running each element in collection thru iteratee.\r\n    //https://lodash.com/docs/4.17.15#map\r\n    var departments_list = _.map(jobs, 'department');\r\n    /* Creates a duplicate-free version of an array (remove duplicate values) */\r\n    /* https://lodash.com/docs/4.17.15#uniq */\r\n    departments_list = _.uniq(\r\n      _.reverse(departments_list)\r\n    ); /* return for example: [\"General\",\"Product Management\",\"Business\"\"] */\r\n\r\n    let grouped_data = _.groupBy(jobs, 'department');\r\n    //console.log(\"groupBy\",grouped_data);\r\n\r\n    let count = 0;\r\n    _.map(grouped_data, function (jobs_inside_department, this_department_name) {\r\n      // ADD Cagtgory name //\r\n      _.forEach(jobs_inside_department, function (job, index) {\r\n        if (index == 0) {\r\n          $('[data-jobs-wrap]').append(\r\n            `<h2 class=\"department_title\">${this_department_name} </h2>`\r\n          );\r\n          this_department_name = this_department_name.replace('&', '');\r\n          $('[data-jobs-wrap]').append(`<div class=\"job-wrap\" id=\"wrap${count}\"></div>`);\r\n        }\r\n\r\n        generate_Position_Item(job, count);\r\n      });\r\n\r\n      count++;\r\n    });\r\n  } catch (e) {\r\n    //console.log(e);\r\n  }\r\n}\r\n\r\nmyFetch();\r\n\r\n/* ################################################################\r\n          Part 3 - Output the data for each category job position card \r\n    ################################################################## */\r\n\r\nlet counter = 1;\r\n\r\nfunction generate_Position_Item(this_job, count) {\r\n  //alert(department_key);\r\n  /* card ref */\r\n  let this_card = $(`[data-card]:eq(0)`);\r\n  this_card = this_card.clone();\r\n\r\n  //console.log(this_card[0].innerText);\r\n  /* IMAGE URL (If user do not set image use placeholder) */\r\n  let place_holder_url =\r\n    'https://uploads-ssl.webflow.com/62455fb5c801f78400e3ec88/6355542863bfedf0664db0ba_liquidity-logo.svg';\r\n  let image_url = this_job.picture_url !== null ? this_job.picture_url : place_holder_url;\r\n\r\n  /* Location (Check if set) */\r\n  let city, country;\r\n  if (this_job.location !== null) {\r\n    if (this_job.location.country !== '') {\r\n      this_card.find('[data-country]').show();\r\n      city = this_job.location.country;\r\n    }\r\n    if (this_job.location.city !== '') {\r\n      this_card.find('[data-city]').show();\r\n      this_card.find('[data-city-comma]').show();\r\n      country = this_job.location.city;\r\n    }\r\n    this_card.find('[data-location-divider]').show();\r\n  } else {\r\n    city = '';\r\n    country = '';\r\n    this_card.find('[data-location-divider]').hide();\r\n    this_card.find('[data-city-comma]').hide();\r\n  }\r\n\r\n  /* Employment_type (If type empty hide) */\r\n  let employment_type;\r\n\r\n  if (this_job.employment_type !== null) {\r\n    employment_type = this_job.employment_type;\r\n    this_card.find('[data-employment-divider]').show();\r\n  } else {\r\n    employment_type = '';\r\n    this_card.find('[data-employment-divider]').hide();\r\n  }\r\n\r\n  name_without_spaces = this_job.name.replace(/ /g, '-');\r\n  location_without_spaces = this_job.location.name.replace(/ /g, '-');\r\n  department_without_spaces = this_job.department.replace(/ /g, '-');\r\n  let card_url = `/careers/job?uid=${this_job.uid}&position=${name_without_spaces}&department=${department_without_spaces}&location=${location_without_spaces}`;\r\n\r\n  /* ############## Edit values ########################## */\r\n  /* change values of duplicate card */\r\n  //alert(this_job.name + \" \" + count + this_job.uid);\r\n  this_card.find('[data-name]').text(`${this_job.name}`);\r\n  this_card.attr('id', this_job.uid);\r\n  this_card.attr('href', card_url);\r\n  this_card.find('[data-city]').text(`${city}`);\r\n  this_card.find('[data-country]').text(` ${country}`);\r\n  this_card.find('[data-department]').text(this_job.department);\r\n  this_card.find('[data-employment_type]').text(employment_type);\r\n  /* if image not null change placeholder */\r\n  this_card.find('[data-image]').attr('src', image_url);\r\n  this_card.find('[data-image]').attr('alt', `${this_job.name}`);\r\n  this_card.find('[data-index]').text(this_job.uid);\r\n  /* append*/\r\n  this_card.appendTo(`#wrap${count}`);\r\n  /* update counter */\r\n  counter++;\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
